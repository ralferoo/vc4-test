
alpha.o:     file format elf32-vc4


Disassembly of section .text:

00000000 <_binary_alpha_bin_start>:
   0:	04 42             	add r4,r0
   2:	05 b0 20 00       	mov r5,32
   6:	0b f8 38 84 80 03 	v16ld HX(16++,0),(r2+=r5) REP8
   c:	40 f9 08 00 
  10:	0b f8 38 88 80 03 	v16ld HX(32++,0),(r3+=r5) REP8
  16:	40 f9 0c 00 
  1a:	0b f8 38 80 80 03 	v16ld HX(0++,0),(r1+=r5) REP8
  20:	40 f9 04 00 
  24:	93 fd 01 04 20 00 	vmulm.ss H(16++,0),H(16++,0),H(32++,0) REP8
  2a:	e0 fb 3e 00 
  2e:	93 fd 09 24 a0 00 	vmulm.ss H(16++,16),H(16++,16),H(32++,16) REP8
  34:	e0 fb 3e 00 
  38:	43 fd 22 88 ff 07 	v16rsub HX(32++,0),HX(32++,0),65535 REP8
  3e:	e0 fb 3f 00 
  42:	93 fd 00 00 20 00 	vmulm.ss H(0++,0),H(0++,0),H(32++,0) REP8
  48:	e0 fb 3e 00 
  4c:	93 fd 08 20 a0 00 	vmulm.ss H(0++,16),H(0++,16),H(32++,16) REP8
  52:	e0 fb 3e 00 
  56:	03 fd 20 80 10 02 	v16add HX(0++,0),HX(0++,0),HX(16++,0) REP8
  5c:	e0 fb 3e 00 
  60:	8b f8 20 e0 80 03 	v16st HX(0++,0),(r0+=r5) REP8
  66:	e0 53 00 00 
  6a:	50 56             	addscale r0,r5<<3
  6c:	51 56             	addscale r1,r5<<3
  6e:	52 56             	addscale r2,r5<<3
  70:	53 56             	addscale r3,r5<<3
  72:	00 8b ca 53       	blt r0,r4,6 <_binary_alpha_bin_start+0x6>
  76:	5a 00             	rts
  78:	49 4e             	bmask r9,r4
  7a:	49 02             	ldm r16-sp,(sp++)
	...
